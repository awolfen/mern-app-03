{"version":3,"sources":["shared/components/UIElements/Card.js","shared/components/UIElements/Avatar.js","user/components/UserItem.js","user/components/UsersList.js","user/pages/Users.js"],"names":["Card","props","className","style","children","Avatar","src","image","alt","width","height","UsersItem","to","id","process","name","placeCount","UsersList","items","length","map","user","places","Users","useHttpClient","isLoading","error","clearError","sendRequest","useState","loadedUsers","setLoadedUsers","useEffect","a","responseData","users","fetchUsers","Fragment","ErrorModal","onClear","LoadingSpinner","asOverlay"],"mappings":"iHAAA,sBAYeA,IARF,SAAAC,GACX,OACE,qBAAKC,UAAS,eAAUD,EAAMC,WAAaC,MAAOF,EAAME,MAAxD,SACGF,EAAMG,a,8MCSEC,EAZA,SAAAJ,GACb,OACE,qBAAKC,UAAS,iBAAYD,EAAMC,WAAaC,MAAOF,EAAME,MAA1D,SACE,qBACEG,IAAKL,EAAMM,MACXC,IAAKP,EAAMO,IACXL,MAAO,CAAEM,MAAOR,EAAMQ,MAAOC,OAAQT,EAAMQ,YCiBpCE,G,MApBG,SAAAV,GACd,OACI,oBAAIC,UAAU,YAAd,SACI,cAACF,EAAA,EAAD,CAAME,UAAU,qBAAhB,SACI,eAAC,IAAD,CAAMU,GAAE,WAAMX,EAAMY,GAAZ,WAAR,UACI,qBAAKX,UAAU,mBAAf,SACI,cAAC,EAAD,CAAQK,MAAK,UAAKO,uCAAL,OAAuCb,EAAMM,OAASC,IAAKP,EAAMc,SAElF,sBAAKb,UAAU,kBAAf,UACI,6BAAKD,EAAMc,OACX,+BACKd,EAAMe,WADX,IAC6C,IAArBf,EAAMe,WAAmB,QAAU,wBCcpEC,G,MA3BG,SAAAhB,GACd,OAA2B,IAAvBA,EAAMiB,MAAMC,OAGR,qBAAKjB,UAAU,SAAf,SACI,cAACF,EAAA,EAAD,UACI,qDAOZ,oBAAIE,UAAU,aAAd,SACKD,EAAMiB,MAAME,KAAI,SAAAC,GACb,OAAO,cAAC,EAAD,CAEHR,GAAIQ,EAAKR,GACTN,MAAOc,EAAKd,MACZQ,KAAMM,EAAKN,KACXC,WAAYK,EAAKC,OAAOH,QAJnBE,EAAKR,W,wBCiBfU,UA/BD,WACV,MAAsDC,cAA9CC,EAAR,EAAQA,UAAWC,EAAnB,EAAmBA,MAAOC,EAA1B,EAA0BA,WAAYC,EAAtC,EAAsCA,YACtC,EAAsCC,qBAAtC,mBAAOC,EAAP,KAAoBC,EAApB,KAgBA,OAZAC,qBAAU,YACU,uCAAG,4BAAAC,EAAA,+EAEgBL,EAAY,GAAD,OAAId,yCAAJ,WAF3B,OAELoB,EAFK,OAIXH,EAAeG,EAAaC,OAJjB,uGAAH,qDAQhBC,KACD,CAACR,IAGA,eAAC,IAAMS,SAAP,WACI,cAACC,EAAA,EAAD,CAAYZ,MAAOA,EAAOa,QAASZ,IAClCF,GACG,qBAAKvB,UAAU,SAAf,SACI,cAACsC,EAAA,EAAD,CAAgBC,WAAS,OAG/BhB,GAAaK,GAAe,cAAC,EAAD,CAAWZ,MAAOY","file":"static/js/8.143c10c4.chunk.js","sourcesContent":["import React from 'react';\n\nimport './Card.css';\n\nconst Card = props => {\n  return (\n    <div className={`card ${props.className}`} style={props.style}>\n      {props.children}\n    </div>\n  );\n};\n\nexport default Card;\n","import React from 'react';\n\nimport './Avatar.css';\n\nconst Avatar = props => {\n  return (\n    <div className={`avatar ${props.className}`} style={props.style}>\n      <img\n        src={props.image}\n        alt={props.alt}\n        style={{ width: props.width, height: props.width }}\n      />\n    </div>\n  );\n};\n\nexport default Avatar;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport Avatar from '../../shared/components/UIElements/Avatar';\nimport Card from '../../shared/components/UIElements/Card'\nimport './UserItem.css';\n\nconst UsersItem = props => {\n    return (\n        <li className=\"user-item\">\n            <Card className=\"user-item__content\">\n                <Link to={`/${props.id}/places`}>\n                    <div className=\"user-item__image\">\n                        <Avatar image={`${process.env.REACT_APP_ASSET_URL}${props.image}`} alt={props.name}></Avatar>\n                    </div>\n                    <div className=\"user-item__info\">\n                        <h2>{props.name}</h2>\n                        <h3>\n                            {props.placeCount} {props.placeCount === 1 ? 'Place' : 'Places'}\n                        </h3>\n                    </div>\n                </Link>\n            </Card>\n        </li>\n    );\n};\n\nexport default UsersItem;","import React from 'react';\nimport Card from '../../shared/components/UIElements/Card';\nimport UsersItem from './UserItem';\nimport './UsersList.css';\n\nconst UsersList = props => {\n    if (props.items.length === 0) {\n        return (\n\n            <div className=\"center\">\n                <Card>\n                    <h2>No users found.</h2>\n                </Card>\n            </div>\n        )\n    }\n\n    return (\n        <ul className=\"users-list\">\n            {props.items.map(user => {\n                return <UsersItem\n                    key={user.id}\n                    id={user.id}\n                    image={user.image}\n                    name={user.name}\n                    placeCount={user.places.length}\n                />;\n            })}\n        </ul>\n    );\n};\n\nexport default UsersList;","import React, { useEffect, useState } from 'react';\n\nimport UsersList from '../components/UsersList';\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner';\nimport ErrorModal from '../../shared/components/UIElements/ErrorModal';\nimport { useHttpClient } from '../../shared/hooks/http-hook';\n\nconst Users = () => {\n    const { isLoading, error, clearError, sendRequest } = useHttpClient();\n    const [loadedUsers, setLoadedUsers] = useState();\n\n\n\n    useEffect(() => {\n        const fetchUsers = async () => {\n            try {\n                const responseData = await sendRequest(`${process.env.REACT_APP_BACKEND_URL}/users`);\n\n                setLoadedUsers(responseData.users);\n            } catch (err) {\n            }\n        };\n        fetchUsers();\n    }, [sendRequest]); // important to have callback on sendRequest to avoid dependency loops\n\n    return (\n        <React.Fragment>\n            <ErrorModal error={error} onClear={clearError} />\n            {isLoading && (\n                <div className=\"center\">\n                    <LoadingSpinner asOverlay />\n                </div>\n            )}\n            {!isLoading && loadedUsers && <UsersList items={loadedUsers} />}\n        </React.Fragment>\n    );\n};\n\nexport default Users;"],"sourceRoot":""}