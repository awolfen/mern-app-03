{"version":3,"sources":["shared/context/auth-context.js","shared/components/UIElements/LoadingSpinner.js","shared/components/UIElements/Backdrop.js","shared/hooks/auth-hook.js","shared/components/Navigation/MainHeader.js","shared/components/Navigation/NavLinks.js","shared/components/Navigation/SideDrawer.js","shared/components/Navigation/MainNavigation.js","App.js","index.js"],"names":["AuthContext","createContext","isLoggedIn","userId","token","login","logout","LoadingSpinner","props","className","asOverlay","Backdrop","ReactDOM","createPortal","onClick","document","getElementById","logoutTimer","MainHeader","children","NavLinks","auth","useContext","to","exact","SideDrawer","content","CSSTransition","in","show","timeout","classNames","mountOnEnter","unmountOnExit","MainNavigation","useState","drawerIsOpen","setDrawerIsOpen","Fragment","NewPlace","React","lazy","Users","UserPlaces","UpdatePlace","Auth","App","routes","setToken","tokenExpirationDate","setTokenExpirationDate","setUserId","useCallback","uid","expirationDate","Date","getTime","localStorage","setItem","JSON","stringify","expiration","toISOString","removeItem","useEffect","remainingTime","setTimeout","clearTimeout","storedData","parse","getItem","useAuth","path","Provider","value","fallback","render","StrictMode"],"mappings":"0HAAA,6CAEaA,EAAcC,wBAAc,CACrCC,YAAY,EACZC,OAAQ,KACRC,MAAO,KACPC,MAAO,aACPC,OAAQ,gB,iCCPZ,sBAYeC,IARQ,SAAAC,GACrB,OACE,qBAAKC,UAAS,UAAKD,EAAME,WAAa,4BAAtC,SACE,qBAAKD,UAAU,sB,8BCPrB,wCAYeE,IAPE,SAAAH,GACf,OAAOI,IAASC,aACd,qBAAKJ,UAAU,WAAWK,QAASN,EAAMM,UACzCC,SAASC,eAAe,oB,qLCNxBC,E,mFCSWC,EARI,SAAAV,GACf,OACI,wBAAQC,UAAU,cAAlB,SACKD,EAAMW,Y,QCqBJC,G,MArBE,SAAAZ,GACb,IAAMa,EAAOC,qBAAWtB,KAExB,OACI,qBAAIS,UAAU,YAAd,UACI,6BACI,cAAC,IAAD,CAASc,GAAG,IAAIC,OAAK,EAArB,yBAEHH,EAAKnB,YAAe,6BACjB,cAAC,IAAD,CAASqB,GAAE,WAAMF,EAAKlB,OAAX,WAAX,yBAEHkB,EAAKnB,YAAe,6BACjB,cAAC,IAAD,CAASqB,GAAG,cAAZ,0BAEJ,6BACI,cAAC,IAAD,CAAST,QAASO,EAAKnB,WAAamB,EAAKf,OAAS,aAAWiB,GAAG,QAAhE,SAAyEF,EAAKnB,WAAa,SAAW,wB,QCEvGuB,G,MAjBI,SAAAjB,GACf,IAAMkB,EACF,cAACC,EAAA,EAAD,CACIC,GAAIpB,EAAMqB,KACVC,QAAS,IACTC,WAAW,gBACXC,cAAY,EACZC,eAAa,EALjB,SAOQ,uBAAOxB,UAAU,cAAjB,SAAgCD,EAAMW,aAIlD,OAAOP,IAASC,aAAaa,EAASX,SAASC,eAAe,kB,QC0BnDkB,EArCQ,SAAA1B,GACnB,MAAwC2B,oBAAS,GAAjD,mBAAOC,EAAP,KAAqBC,EAArB,KAWA,OACI,eAAC,IAAMC,SAAP,WACKF,GAAgB,cAACzB,EAAA,EAAD,CAAUG,QAPf,WAChBuB,GAAgB,MAOZ,cAAC,EAAD,CAAYR,KAAMO,EAAlB,SACI,qBAAK3B,UAAU,8BAAf,SACI,cAAC,EAAD,QAGR,eAAC,EAAD,WACI,yBAAQA,UAAU,4BAA4BK,QAlBvC,WACfuB,GAAgB,IAiBR,UACI,yBACA,yBACA,4BAEJ,oBAAI5B,UAAU,yBAAd,SACI,cAAC,IAAD,CAAMc,GAAG,IAAT,2BAEJ,qBAAKd,UAAU,8BAAf,SACI,cAAC,EAAD,a,QCzBd8B,EAAWC,IAAMC,MAAK,kBAAM,sDAC5BC,EAAQF,IAAMC,MAAK,kBAAM,sDACzBE,EAAaH,IAAMC,MAAK,kBAAM,sDAC9BG,EAAcJ,IAAMC,MAAK,kBAAM,sDAC/BI,EAAOL,IAAMC,MAAK,kBAAM,sDAoEfK,EAlEH,WACV,IACIC,EADJ,ELhBqB,WACnB,MAA0BZ,oBAAS,GAAnC,mBAAO/B,EAAP,KAAc4C,EAAd,KACA,EAAsDb,qBAAtD,mBAAOc,EAAP,KAA4BC,EAA5B,KACA,EAA4Bf,oBAAS,GAArC,mBAAOhC,EAAP,KAAegD,EAAf,KAEM9C,EAAQ+C,uBAAY,SAACC,EAAKjD,EAAOkD,GACnCN,EAAS5C,GACT+C,EAAUE,GACV,IAAMJ,EAAsBK,GAAkB,IAAIC,MAAK,IAAIA,MAAOC,UAAY,MAC9EN,EAAuBD,GACvBQ,aAAaC,QACT,WACAC,KAAKC,UAAU,CACXzD,OAAQkD,EACRjD,MAAOA,EACPyD,WAAYZ,EAAoBa,mBAGzC,IAEGxD,EAAS8C,uBAAY,WACvBJ,EAAS,MACTE,EAAuB,MACvBC,EAAU,MACVM,aAAaM,WAAW,cACzB,IAsBH,OApBAC,qBAAU,WACN,GAAI5D,GAAS6C,EAAqB,CAC9B,IAAMgB,EAAgBhB,EAAoBO,WAAY,IAAID,MAAOC,UACjEvC,EAAciD,WAAW5D,EAAQ2D,QAEjCE,aAAalD,KAElB,CAACb,EAAOE,EAAQ2C,IAEnBe,qBAAU,WACN,IAAMI,EAAaT,KAAKU,MAAMZ,aAAaa,QAAQ,aAE/CF,GACAA,EAAWhE,OACX,IAAImD,KAAKa,EAAWP,WAAa,IAAIN,OAErClD,EAAM+D,EAAWjE,OAAQiE,EAAWhE,MAAO,IAAImD,KAAKa,EAAWP,eAEpE,CAACxD,IAEG,CAAED,QAAOD,SAAQE,QAAOC,UK/BQiE,GAAjCnE,EAAR,EAAQA,MAAOD,EAAf,EAAeA,OAAQE,EAAvB,EAAuBA,MAAOC,EAA9B,EAA8BA,OAuC9B,OAnCEyC,EADE3C,EAEA,eAAC,IAAD,WACE,cAAC,IAAD,CAAOoE,KAAK,IAAIhD,OAAK,EAArB,SACE,cAACkB,EAAD,MAEF,cAAC,IAAD,CAAO8B,KAAK,kBAAkBhD,OAAK,EAAnC,SACE,cAACmB,EAAD,MAEF,cAAC,IAAD,CAAO6B,KAAK,cAAchD,OAAK,EAA/B,SACE,cAACe,EAAD,MAEF,cAAC,IAAD,CAAOiC,KAAK,mBAAmBhD,OAAK,EAApC,SACE,cAACoB,EAAD,MAEF,cAAC,IAAD,CAAUrB,GAAG,SAMf,eAAC,IAAD,WACE,cAAC,IAAD,CAAOiD,KAAK,IAAIhD,OAAK,EAArB,SACE,cAACkB,EAAD,MAEF,cAAC,IAAD,CAAO8B,KAAK,kBAAkBhD,OAAK,EAAnC,SACE,cAACmB,EAAD,MAEF,cAAC,IAAD,CAAO6B,KAAK,QAAZ,SACE,cAAC3B,EAAD,MAEF,cAAC,IAAD,CAAUtB,GAAG,aAMjB,cAAC,IAAYkD,SAAb,CACEC,MAAO,CACLxE,aAAcE,EACdA,MAAOA,EACPD,OAAQA,EACRE,MAAOA,EACPC,OAAQA,GANZ,SASE,eAAC,IAAD,WACE,cAAC,EAAD,IACA,+BACE,cAAC,WAAD,CAAUqE,SACR,qBAAKlE,UAAU,SAAf,SACE,cAACF,EAAA,EAAD,MAFJ,SAKGwC,YCxEbnC,IAASgE,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEF9D,SAASC,eAAe,W","file":"static/js/main.919bdfb2.chunk.js","sourcesContent":["import { createContext } from \"react\";\n\nexport const AuthContext = createContext({\n    isLoggedIn: false,\n    userId: null,\n    token: null,\n    login: () => { },\n    logout: () => { }\n});","import React from 'react';\n\nimport './LoadingSpinner.css';\n\nconst LoadingSpinner = props => {\n  return (\n    <div className={`${props.asOverlay && 'loading-spinner__overlay'}`}>\n      <div className=\"lds-dual-ring\"></div>\n    </div>\n  );\n};\n\nexport default LoadingSpinner;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './Backdrop.css';\n\nconst Backdrop = props => {\n  return ReactDOM.createPortal(\n    <div className=\"backdrop\" onClick={props.onClick}></div>,\n    document.getElementById('backdrop-hook')\n  );\n};\n\nexport default Backdrop;\n","import { useCallback, useEffect, useState } from \"react\";\r\n\r\nlet logoutTimer;\r\n\r\nexport const useAuth = () => {\r\n    const [token, setToken] = useState(false);\r\n    const [tokenExpirationDate, setTokenExpirationDate] = useState();\r\n    const [userId, setUserId] = useState(false);\r\n\r\n    const login = useCallback((uid, token, expirationDate) => {\r\n        setToken(token);\r\n        setUserId(uid);\r\n        const tokenExpirationDate = expirationDate || new Date(new Date().getTime() + 1000 * 60 * 60); // current time + 1h -> token lifetime\r\n        setTokenExpirationDate(tokenExpirationDate);\r\n        localStorage.setItem(\r\n            'userData',\r\n            JSON.stringify({\r\n                userId: uid,\r\n                token: token,\r\n                expiration: tokenExpirationDate.toISOString()\r\n            })\r\n        );\r\n    }, []);\r\n\r\n    const logout = useCallback(() => {\r\n        setToken(null);\r\n        setTokenExpirationDate(null);\r\n        setUserId(null);\r\n        localStorage.removeItem('userData');\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if (token && tokenExpirationDate) {\r\n            const remainingTime = tokenExpirationDate.getTime() - new Date().getTime();\r\n            logoutTimer = setTimeout(logout, remainingTime)\r\n        } else {\r\n            clearTimeout(logoutTimer);\r\n        }\r\n    }, [token, logout, tokenExpirationDate]);\r\n\r\n    useEffect(() => {\r\n        const storedData = JSON.parse(localStorage.getItem('userData'));\r\n        if (\r\n            storedData &&\r\n            storedData.token &&\r\n            new Date(storedData.expiration > new Date())\r\n        ) {\r\n            login(storedData.userId, storedData.token, new Date(storedData.expiration));\r\n        }\r\n    }, [login]);\r\n\r\n    return { token, userId, login, logout };\r\n};","import React from 'react';\nimport './MainHeader.css';\n\nconst MainHeader = props => {\n    return (\n        <header className=\"main-header\">\n            {props.children}\n        </header>\n    );\n};\n\nexport default MainHeader;","import React, { useContext } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { AuthContext } from '../../context/auth-context';\n\nimport './NavLinks.css';\n\nconst NavLinks = props => {\n    const auth = useContext(AuthContext);\n\n    return (\n        <ul className=\"nav-links\">\n            <li>\n                <NavLink to=\"/\" exact>ALL USERS</NavLink>\n            </li>\n            {auth.isLoggedIn && (<li>\n                <NavLink to={`/${auth.userId}/places`}>MY PLACES</NavLink>\n            </li>)}\n            {auth.isLoggedIn && (<li>\n                <NavLink to=\"/places/new\">ADD PLACES</NavLink>\n            </li>)}\n            <li>\n                <NavLink onClick={auth.isLoggedIn ? auth.logout : () => { }} to=\"/auth\">{auth.isLoggedIn ? \"LOGOUT\" : \"AUTHENTICATE\"}</NavLink>\n            </li>\n        </ul >\n    );\n};\n\nexport default NavLinks;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { CSSTransition } from 'react-transition-group';\n\nimport './SideDrawer.css';\n\nconst SideDrawer = props => {\n    const content = (\n        <CSSTransition\n            in={props.show}\n            timeout={200}\n            classNames=\"slide-in-left\"\n            mountOnEnter\n            unmountOnExit\n        >\n                <aside className=\"side-drawer\">{props.children}</aside>\n        </CSSTransition>\n    );\n\n    return ReactDOM.createPortal(content, document.getElementById('drawer-hook'));\n\n};\n\nexport default SideDrawer;","import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport './MainNavigation.css';\nimport MainHeader from './MainHeader';\nimport NavLinks from './NavLinks';\nimport SideDrawer from './SideDrawer';\nimport Backdrop from '../UIElements/Backdrop';\n\nconst MainNavigation = props => {\n    const [drawerIsOpen, setDrawerIsOpen] = useState(false);\n\n    const openDrawer = () => {\n        setDrawerIsOpen(true);\n    };\n\n    const closeDrawer = () => {\n        setDrawerIsOpen(false);\n\n    };\n\n    return (\n        <React.Fragment>\n            {drawerIsOpen && <Backdrop onClick={closeDrawer} />}\n            <SideDrawer show={drawerIsOpen}>\n                <nav className=\"main-navigation__drawer-nav\">\n                    <NavLinks />\n                </nav>\n            </SideDrawer>\n            <MainHeader>\n                <button className=\"main-navigation__menu-btn\" onClick={openDrawer}>\n                    <span />\n                    <span />\n                    <span />\n                </button>\n                <h1 className=\"main-navigation__title\">\n                    <Link to=\"/\">Your Places</Link>\n                </h1>\n                <nav className=\"main-navigation__header-nav\">\n                    <NavLinks />\n                </nav>\n            </MainHeader>\n        </React.Fragment>\n    );\n};\n\nexport default MainNavigation;","import React, { Suspense } from 'react';\nimport { BrowserRouter as Router, Route, Redirect, Switch } from 'react-router-dom';\n\n// import NewPlace from './places/pages/NewPlace';\n// import Users from './user/pages/Users';\n// import UserPlaces from './places/pages/UserPlaces';\n// import UpdatePlace from './places/pages/UpdatePlace';\n// import Auth from './user/pages/Auth';\nimport MainNavigation from './shared/components/Navigation/MainNavigation';\nimport LoadingSpinner from './shared/components/UIElements/LoadingSpinner';\nimport { AuthContext } from './shared/context/auth-context';\nimport { useAuth } from './shared/hooks/auth-hook';\n\nconst NewPlace = React.lazy(() => import('./places/pages/NewPlace'));\nconst Users = React.lazy(() => import('./user/pages/Users'));\nconst UserPlaces = React.lazy(() => import('./places/pages/UserPlaces'));\nconst UpdatePlace = React.lazy(() => import('./places/pages/UpdatePlace'));\nconst Auth = React.lazy(() => import('./user/pages/Auth'));\n\nconst App = () => {\n  const { token, userId, login, logout } = useAuth();\n  let routes;\n\n  if (token) {\n    routes = (\n      <Switch>\n        <Route path=\"/\" exact>\n          <Users />\n        </Route>\n        <Route path=\"/:userId/places\" exact>\n          <UserPlaces />\n        </Route>\n        <Route path=\"/places/new\" exact>\n          <NewPlace />\n        </Route>\n        <Route path=\"/places/:placeId\" exact>\n          <UpdatePlace />\n        </Route>\n        <Redirect to=\"/\" />\n      </Switch>\n\n    );\n  } else {\n    routes = (\n      <Switch>\n        <Route path=\"/\" exact>\n          <Users />\n        </Route>\n        <Route path=\"/:userId/places\" exact>\n          <UserPlaces />\n        </Route>\n        <Route path=\"/auth\">\n          <Auth />\n        </Route>\n        <Redirect to=\"/auth\" />\n      </Switch>\n    );\n  }\n\n  return (\n    <AuthContext.Provider\n      value={{\n        isLoggedIn: !!token,\n        token: token,\n        userId: userId,\n        login: login,\n        logout: logout\n      }}\n    >\n      <Router>\n        <MainNavigation />\n        <main>\n          <Suspense fallback={\n            <div className=\"center\">\n              <LoadingSpinner />\n            </div>\n          }>\n            {routes}\n          </Suspense>\n        </main>\n      </Router>\n    </AuthContext.Provider>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}