{"version":3,"sources":["shared/util/validators.js","../node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js","shared/components/FormElements/Input.js","shared/hooks/form-hook.js","shared/components/FormElements/ImageUpload.js","places/pages/NewPlace.js"],"names":["VALIDATOR_TYPE_REQUIRE","VALIDATOR_TYPE_MINLENGTH","VALIDATOR_TYPE_MAXLENGTH","VALIDATOR_TYPE_EMAIL","VALIDATOR_REQUIRE","type","VALIDATOR_MINLENGTH","val","VALIDATOR_EMAIL","validate","value","validators","isValid","o","allowArrayLike","it","Symbol","iterator","Array","isArray","unsupportedIterableToArray","length","i","F","s","n","done","e","_e","f","TypeError","err","normalCompletion","didErr","step","next","_e2","validator","trim","test","inputReducer","state","action","isTouched","Input","props","useReducer","valid","inputState","dispatch","id","onInput","useEffect","changeHandler","event","target","touchHandler","element","placeholder","onChange","onBlur","rows","className","htmlFor","label","errorText","formReducer","formIsValid","inputId","inputs","useForm","initialInputs","initialFormValidity","formState","useCallback","inputData","formValidity","ImageUpload","useState","file","setFile","previewUrl","setPreviewUrl","setIsValid","filePickerRef","useRef","fileReader","FileReader","onload","result","readAsDataURL","ref","style","display","accept","pickedFile","fileIsValid","files","center","src","alt","onClick","current","click","NewPlace","auth","useContext","AuthContext","useHttpClient","isLoading","error","clearError","sendRequest","title","image","description","address","inputHandler","history","useHistory","placeSubmitHandler","a","preventDefault","formData","FormData","append","process","Authorization","token","push","console","log","Fragment","onClear","onSubmit","asOverlay","disabled"],"mappings":"qQAAA,IAAMA,EAAyB,UACzBC,EAA2B,YAC3BC,EAA2B,YAG3BC,EAAuB,QAGhBC,EAAoB,iBAAO,CAAEC,KAAML,IAEnCM,EAAsB,SAAAC,GAAG,MAAK,CACzCF,KAAMJ,EACNM,IAAKA,IAQMC,EAAkB,iBAAO,CAAEH,KAAMF,IAEjCM,EAAW,SAACC,EAAOC,GAC9B,IAD6C,EACzCC,GAAU,EAD+B,ECrBhC,SAAoCC,EAAGC,GACpD,IAAIC,EAEJ,GAAsB,qBAAXC,QAAgD,MAAtBH,EAAEG,OAAOC,UAAmB,CAC/D,GAAIC,MAAMC,QAAQN,KAAOE,EAAK,OAAAK,EAAA,GAA2BP,KAAOC,GAAkBD,GAAyB,kBAAbA,EAAEQ,OAAqB,CAC/GN,IAAIF,EAAIE,GACZ,IAAIO,EAAI,EAEJC,EAAI,aAER,MAAO,CACLC,EAAGD,EACHE,EAAG,WACD,OAAIH,GAAKT,EAAEQ,OAAe,CACxBK,MAAM,GAED,CACLA,MAAM,EACNhB,MAAOG,EAAES,OAGbK,EAAG,SAAWC,GACZ,MAAMA,GAERC,EAAGN,GAIP,MAAM,IAAIO,UAAU,yIAGtB,IAEIC,EAFAC,GAAmB,EACnBC,GAAS,EAEb,MAAO,CACLT,EAAG,WACDT,EAAKF,EAAEG,OAAOC,aAEhBQ,EAAG,WACD,IAAIS,EAAOnB,EAAGoB,OAEd,OADAH,EAAmBE,EAAKR,KACjBQ,GAETP,EAAG,SAAWS,GACZH,GAAS,EACTF,EAAMK,GAERP,EAAG,WACD,IACOG,GAAoC,MAAhBjB,EAAW,QAAWA,EAAW,SAC1D,QACA,GAAIkB,EAAQ,MAAMF,KD9BqB,CAErBpB,GAFqB,IAE7C,2BAAoC,CAAC,IAA1B0B,EAAyB,QAC9BA,EAAUhC,OAASL,IACrBY,EAAUA,GAAWF,EAAM4B,OAAOjB,OAAS,GAEzCgB,EAAUhC,OAASJ,IACrBW,EAAUA,GAAWF,EAAM4B,OAAOjB,QAAUgB,EAAU9B,KAEpD8B,EAAUhC,OAASH,IACrBU,EAAUA,GAAWF,EAAM4B,OAAOjB,QAAUgB,EAAU9B,KA7BjC,QA+BnB8B,EAAUhC,OACZO,EAAUA,IAAYF,GAAS2B,EAAU9B,KA/BpB,QAiCnB8B,EAAUhC,OACZO,EAAUA,IAAYF,GAAS2B,EAAU9B,KAEvC8B,EAAUhC,OAASF,IACrBS,EAAUA,GAAW,iBAAiB2B,KAAK7B,KAnBF,8BAsB7C,OAAOE,I,kFEvCH4B,EAAe,SAACC,EAAOC,GACzB,OAAQA,EAAOrC,MACX,IAAK,SACD,OAAO,2BACAoC,GADP,IAEI/B,MAAOgC,EAAOnC,IACdK,QAASH,YAASiC,EAAOnC,IAAKmC,EAAO/B,cAE7C,IAAK,QACD,OAAO,2BACA8B,GADP,IAEIE,WAAW,IAEnB,QACI,OAAOF,IA4DJG,IAxDD,SAAAC,GACV,MAA+BC,qBAAWN,EAAc,CACpD9B,MAAOmC,EAAMnC,OAAS,GACtBiC,WAAW,EACX/B,QAASiC,EAAME,QAAS,IAH5B,mBAAOC,EAAP,KAAmBC,EAAnB,KAMQC,EAAgBL,EAAhBK,GAAIC,EAAYN,EAAZM,QACJzC,EAAmBsC,EAAnBtC,MAAOE,EAAYoC,EAAZpC,QAGfwC,qBAAU,WACND,EACID,EACAxC,EACAE,KAEL,CAACsC,EAAIC,EAASzC,EAAOE,IAExB,IAAMyC,EAAgB,SAAAC,GAClBL,EAAS,CAAE5C,KAAM,SAAUE,IAAK+C,EAAMC,OAAO7C,MAAOC,WAAYkC,EAAMlC,cAGpE6C,EAAe,WACjBP,EAAS,CAAE5C,KAAM,WAGfoD,EACgB,UAAlBZ,EAAMY,QACF,uBACIP,GAAIL,EAAMK,GACV7C,KAAMwC,EAAMxC,KACZqD,YAAab,EAAMa,YACnBC,SAAUN,EACVO,OAAQJ,EACR9C,MAAOsC,EAAWtC,QAGtB,0BACIwC,GAAIL,EAAMK,GACVW,KAAMhB,EAAMgB,MAAQ,EACpBF,SAAUN,EACVO,OAAQJ,EACR9C,MAAOsC,EAAWtC,QAI9B,OACI,sBAAKoD,UAAS,wBAAmBd,EAAWpC,SAAWoC,EAAWL,WAAa,yBAA/E,UACI,uBAAOoB,QAASlB,EAAMK,GAAtB,SAA2BL,EAAMmB,QAChCP,GACCT,EAAWpC,SAAWoC,EAAWL,WAAa,4BAAIE,EAAMoB,iB,0HCxEhEC,EAAc,SAACzB,EAAOC,GACxB,OAAQA,EAAOrC,MACX,IAAK,eACD,IAAI8D,GAAc,EAClB,IAAK,IAAMC,KAAW3B,EAAM4B,OAEnB5B,EAAM4B,OAAOD,KAIdD,EADAC,IAAY1B,EAAO0B,QACLD,GAAezB,EAAO9B,QAEtBuD,GAAe1B,EAAM4B,OAAOD,GAASxD,SAG3D,OAAO,2BACA6B,GADP,IAEI4B,OAAO,2BACA5B,EAAM4B,QADP,kBAED3B,EAAO0B,QAAU,CAAE1D,MAAOgC,EAAOhC,MAAOE,QAAS8B,EAAO9B,WAE7DA,QAASuD,IAEjB,IAAK,WACD,MAAO,CACHE,OAAQ3B,EAAO2B,OACfzD,QAAS8B,EAAOyB,aAExB,QACI,OAAO1B,IAIN6B,EAAU,SAACC,EAAeC,GACnC,MAA8B1B,qBAAWoB,EACrC,CACIG,OAAQE,EACR3D,QAAS4D,IAHjB,mBAAOC,EAAP,KAAkBxB,EAAlB,KA0BA,MAAO,CAACwB,EAjBaC,uBAAY,SAACxB,EAAIxC,EAAOE,GACzCqC,EAAS,CACL5C,KAAM,eACNK,MAAOA,EACPE,QAASA,EACTwD,QAASlB,MAEd,IAEiBwB,uBAAY,SAACC,EAAWC,GACxC3B,EAAS,CACL5C,KAAM,WACNgE,OAAQM,EACRR,YAAaS,MAElB,O,0ECOQC,IA7DK,SAAAhC,GAChB,MAAwBiC,qBAAxB,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAAoCF,qBAApC,mBAAOG,EAAP,KAAmBC,EAAnB,KACA,EAA8BJ,oBAAS,GAAvC,mBAAOlE,EAAP,KAAgBuE,EAAhB,KAEMC,EAAgBC,mBAEtBjC,qBAAU,WACN,GAAK2B,EAAL,CAGA,IAAMO,EAAa,IAAIC,WACvBD,EAAWE,OAAS,WAChBN,EAAcI,EAAWG,SAE7BH,EAAWI,cAAcX,MAC1B,CAACA,IAqBJ,OACI,sBAAKjB,UAAU,eAAf,UACI,uBACIZ,GAAIL,EAAMK,GACVyC,IAAKP,EACLQ,MAAO,CAAEC,QAAS,QAClBxF,KAAK,OACLyF,OAAO,kBACPnC,SA3BQ,SAAAL,GAChB,IAAIyC,EACAC,EAAcpF,EACd0C,EAAMC,OAAO0C,OAAuC,IAA9B3C,EAAMC,OAAO0C,MAAM5E,QACzC0E,EAAazC,EAAMC,OAAO0C,MAAM,GAChCjB,EAAQe,GACRZ,GAAW,GACXa,GAAc,IAEdb,GAAW,GACXa,GAAc,GAElBnD,EAAMM,QAAQN,EAAMK,GAAI6C,EAAYC,MAiBhC,sBAAKlC,UAAS,uBAAkBjB,EAAMqD,QAAU,UAAhD,UACI,sBAAKpC,UAAU,wBAAf,UACKmB,GAAc,qBAAKkB,IAAKlB,EAAYmB,IAAI,aACvCnB,GAAc,yDAEpB,cAAC,IAAD,CAAQ5E,KAAK,SAASgG,QAnBT,WACrBjB,EAAckB,QAAQC,SAkBd,4BAIF3F,GAAW,4BAAIiC,EAAMoB,iB,oOCuCpBuC,UAvFE,WACb,IAAMC,EAAOC,qBAAWC,KACxB,EAAsDC,cAA9CC,EAAR,EAAQA,UAAWC,EAAnB,EAAmBA,MAAOC,EAA1B,EAA0BA,WAAYC,EAAtC,EAAsCA,YACtC,EAAkC1C,YAC9B,CACI2C,MAAO,CACHvG,MAAO,GACPE,SAAS,GAEbsG,MAAO,CACHxG,MAAO,KACPE,SAAS,GAEbuG,YAAa,CACTzG,MAAO,GACPE,SAAS,GAEbwG,QAAS,CACL1G,MAAO,GACPE,SAAS,KAGjB,GAnBJ,mBAAO6D,EAAP,KAAkB4C,EAAlB,KAsBMC,EAAUC,cAEVC,EAAkB,uCAAG,WAAMlE,GAAN,eAAAmE,EAAA,6DACvBnE,EAAMoE,kBACAC,EAAW,IAAIC,UACZC,OAAO,QAASpD,EAAUJ,OAAO4C,MAAMvG,OAChDiH,EAASE,OAAO,QAASpD,EAAUJ,OAAO6C,MAAMxG,OAChDiH,EAASE,OAAO,cAAepD,EAAUJ,OAAO8C,YAAYzG,OAC5DiH,EAASE,OAAO,UAAWpD,EAAUJ,OAAO+C,QAAQ1G,OAN7B,kBAQbsG,EACFc,gDACA,OACAH,EACA,CACII,cAAc,UAAD,OAAYtB,EAAKuB,SAbnB,OAgBnBV,EAAQW,KAAK,KAhBM,kDAkBnBC,QAAQC,IAAR,MAlBmB,0DAAH,sDAuBxB,OACI,eAAC,IAAMC,SAAP,WACI,cAAC,IAAD,CAAYtB,MAAOA,EAAOuB,QAAStB,IACnC,uBAAMjD,UAAU,aAAawE,SAAUd,EAAvC,UACKX,GAAa,cAAC,IAAD,CAAgB0B,WAAS,IACvC,cAAC,IAAD,CACIrF,GAAG,QACHO,QAAQ,QACRpD,KAAK,OACL2D,MAAM,QACNrD,WAAY,CAACP,eACb6D,UAAU,8BACVd,QAASkE,IAEb,cAAC,IAAD,CAAanB,QAAM,EAAChD,GAAG,QAAQC,QAASkE,EAAcpD,UAAU,6BAChE,cAAC,IAAD,CACIf,GAAG,cACHO,QAAQ,WACRO,MAAM,cACNrD,WAAY,CAACL,YAAoB,IACjC2D,UAAU,4DACVd,QAASkE,IAEb,cAAC,IAAD,CACInE,GAAG,UACHO,QAAQ,QACRO,MAAM,UACNrD,WAAY,CAACP,eACb6D,UAAU,gCACVd,QAASkE,IAEb,cAAC,IAAD,CAAQhH,KAAK,SAASmI,UAAW/D,EAAU7D,QAA3C","file":"static/js/5.473676b2.chunk.js","sourcesContent":["const VALIDATOR_TYPE_REQUIRE = 'REQUIRE';\nconst VALIDATOR_TYPE_MINLENGTH = 'MINLENGTH';\nconst VALIDATOR_TYPE_MAXLENGTH = 'MAXLENGTH';\nconst VALIDATOR_TYPE_MIN = 'MIN';\nconst VALIDATOR_TYPE_MAX = 'MAX';\nconst VALIDATOR_TYPE_EMAIL = 'EMAIL';\nconst VALIDATOR_TYPE_FILE = 'FILE';\n\nexport const VALIDATOR_REQUIRE = () => ({ type: VALIDATOR_TYPE_REQUIRE });\nexport const VALIDATOR_FILE = () => ({ type: VALIDATOR_TYPE_FILE });\nexport const VALIDATOR_MINLENGTH = val => ({\n  type: VALIDATOR_TYPE_MINLENGTH,\n  val: val\n});\nexport const VALIDATOR_MAXLENGTH = val => ({\n  type: VALIDATOR_TYPE_MAXLENGTH,\n  val: val\n});\nexport const VALIDATOR_MIN = val => ({ type: VALIDATOR_TYPE_MIN, val: val });\nexport const VALIDATOR_MAX = val => ({ type: VALIDATOR_TYPE_MAX, val: val });\nexport const VALIDATOR_EMAIL = () => ({ type: VALIDATOR_TYPE_EMAIL });\n\nexport const validate = (value, validators) => {\n  let isValid = true;\n  for (const validator of validators) {\n    if (validator.type === VALIDATOR_TYPE_REQUIRE) {\n      isValid = isValid && value.trim().length > 0;\n    }\n    if (validator.type === VALIDATOR_TYPE_MINLENGTH) {\n      isValid = isValid && value.trim().length >= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_MAXLENGTH) {\n      isValid = isValid && value.trim().length <= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_MIN) {\n      isValid = isValid && +value >= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_MAX) {\n      isValid = isValid && +value <= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_EMAIL) {\n      isValid = isValid && /^\\S+@\\S+\\.\\S+$/.test(value);\n    }\n  }\n  return isValid;\n};\n","import unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nexport default function _createForOfIteratorHelper(o, allowArrayLike) {\n  var it;\n\n  if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) {\n    if (Array.isArray(o) || (it = unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n\n      var F = function F() {};\n\n      return {\n        s: F,\n        n: function n() {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function e(_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  var normalCompletion = true,\n      didErr = false,\n      err;\n  return {\n    s: function s() {\n      it = o[Symbol.iterator]();\n    },\n    n: function n() {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function e(_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function f() {\n      try {\n        if (!normalCompletion && it[\"return\"] != null) it[\"return\"]();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}","import React, { useEffect, useReducer } from 'react';\n\nimport { validate } from '../../util/validators';\nimport './Input.css';\n\nconst inputReducer = (state, action) => {\n    switch (action.type) {\n        case 'CHANGE':\n            return {\n                ...state,\n                value: action.val,\n                isValid: validate(action.val, action.validators)\n            };\n        case 'TOUCH':\n            return {\n                ...state,\n                isTouched: true\n            };\n        default:\n            return state;\n    }\n};\n\nconst Input = props => {\n    const [inputState, dispatch] = useReducer(inputReducer, {\n        value: props.value || '',\n        isTouched: false,\n        isValid: props.valid || false\n    });\n\n    const { id, onInput } = props;\n    const { value, isValid } = inputState;\n\n    //useEffect? -> function with an array of dependencies that trigger the function, onInput also must be imported\n    useEffect(() => {\n        onInput(\n            id,\n            value,\n            isValid\n        )\n    }, [id, onInput, value, isValid]);\n\n    const changeHandler = event => {\n        dispatch({ type: 'CHANGE', val: event.target.value, validators: props.validators });\n    };\n\n    const touchHandler = () => {\n        dispatch({ type: 'TOUCH' });\n    };\n\n    const element =\n        props.element === 'input' ? (\n            <input\n                id={props.id}\n                type={props.type}\n                placeholder={props.placeholder}\n                onChange={changeHandler}\n                onBlur={touchHandler}\n                value={inputState.value}\n            />\n        ) : (\n            <textarea\n                id={props.id}\n                rows={props.rows || 3}\n                onChange={changeHandler}\n                onBlur={touchHandler}\n                value={inputState.value}\n            />\n        );\n\n    return (\n        <div className={`form-control ${!inputState.isValid && inputState.isTouched && 'form-control--invalid'}`}>\n            <label htmlFor={props.id}>{props.label}</label>\n            {element}\n            {!inputState.isValid && inputState.isTouched && <p>{props.errorText}</p>}\n        </div>\n    );\n};\n\nexport default Input;","import { useCallback, useReducer } from 'react';\n\nconst formReducer = (state, action) => {\n    switch (action.type) {\n        case 'INPUT_CHANGE':\n            let formIsValid = true;\n            for (const inputId in state.inputs) {\n                //this line fixes a bug when you switch between login/signup forms, and the name field is undefined\n                if (!state.inputs[inputId]) {\n                    continue;\n                }\n                if (inputId === action.inputId) {\n                    formIsValid = formIsValid && action.isValid;\n                } else {\n                    formIsValid = formIsValid && state.inputs[inputId].isValid;\n                }\n            }\n            return {\n                ...state,\n                inputs: {\n                    ...state.inputs,\n                    [action.inputId]: { value: action.value, isValid: action.isValid }\n                },\n                isValid: formIsValid\n            };\n        case 'SET_DATA':\n            return {\n                inputs: action.inputs,\n                isValid: action.formIsValid\n            }\n        default:\n            return state;\n    }\n};\n\nexport const useForm = (initialInputs, initialFormValidity) => {\n    const [formState, dispatch] = useReducer(formReducer,\n        {\n            inputs: initialInputs,\n            isValid: initialFormValidity\n        }\n    );\n\n\n    // why useCallback()? -> inputHandler could cause an element to refresh, therefore creating a new onInput, and a new input handler, potentially leading to an infinite loop\n    const inputHandler = useCallback((id, value, isValid) => {\n        dispatch({\n            type: 'INPUT_CHANGE',\n            value: value,\n            isValid: isValid,\n            inputId: id\n        });\n    }, []);\n\n    const setFormData = useCallback((inputData, formValidity) => {\n        dispatch({\n            type: 'SET_DATA',\n            inputs: inputData,\n            formIsValid: formValidity\n        });\n    }, []);\n\n    return [formState, inputHandler, setFormData];\n};\n\n","import React, { useEffect, useRef, useState } from 'react';\r\n\r\nimport Button from '../FormElements/Button';\r\n\r\nimport './ImageUpload.css';\r\n\r\nconst ImageUpload = props => {\r\n    const [file, setFile] = useState();\r\n    const [previewUrl, setPreviewUrl] = useState();\r\n    const [isValid, setIsValid] = useState(false);\r\n\r\n    const filePickerRef = useRef();\r\n\r\n    useEffect(() => {\r\n        if (!file) {\r\n            return;\r\n        }\r\n        const fileReader = new FileReader();\r\n        fileReader.onload = () => {\r\n            setPreviewUrl(fileReader.result);\r\n        };\r\n        fileReader.readAsDataURL(file);\r\n    }, [file]);\r\n\r\n    const pickHandler = event => {\r\n        let pickedFile;\r\n        let fileIsValid = isValid; // necessary as isValid will not update inside of the function\r\n        if (event.target.files && event.target.files.length === 1) {\r\n            pickedFile = event.target.files[0];\r\n            setFile(pickedFile);\r\n            setIsValid(true);\r\n            fileIsValid = true;\r\n        } else {\r\n            setIsValid(false)\r\n            fileIsValid = false;\r\n        }\r\n        props.onInput(props.id, pickedFile, fileIsValid);\r\n    };\r\n\r\n    const pickImageHandler = () => {\r\n        filePickerRef.current.click();\r\n    };\r\n\r\n    return (\r\n        <div className=\"form-control\">\r\n            <input\r\n                id={props.id}\r\n                ref={filePickerRef}\r\n                style={{ display: 'none' }}\r\n                type=\"file\"\r\n                accept=\".jpg,.png,.jpeg\"\r\n                onChange={pickHandler}\r\n            />\r\n            <div className={`image-upload ${props.center && 'center'}`} >\r\n                <div className=\"image-upload__preview\">\r\n                    {previewUrl && <img src={previewUrl} alt=\"Preview\" />}\r\n                    {!previewUrl && <p>Please pick an image.</p>}\r\n                </div>\r\n                <Button type=\"button\" onClick={pickImageHandler}>\r\n                    PICK IMAGE\r\n                </Button>\r\n            </div>\r\n            {!isValid && <p>{props.errorText}</p>}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ImageUpload;","import React, { useContext } from 'react';\nimport { useHistory } from 'react-router';\n\nimport Button from '../../shared/components/FormElements/Button';\nimport Input from '../../shared/components/FormElements/Input';\nimport ErrorModal from '../../shared/components/UIElements/ErrorModal';\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner';\nimport { VALIDATOR_MINLENGTH, VALIDATOR_REQUIRE } from '../../shared/util/validators';\nimport { useForm } from '../../shared/hooks/form-hook';\nimport { useHttpClient } from '../../shared/hooks/http-hook';\nimport { AuthContext } from '../../shared/context/auth-context';\nimport ImageUpload from '../../shared/components/FormElements/ImageUpload';\nimport './PlaceForm.css';\n\nconst NewPlace = () => {\n    const auth = useContext(AuthContext);\n    const { isLoading, error, clearError, sendRequest } = useHttpClient();\n    const [formState, inputHandler] = useForm(\n        {\n            title: {\n                value: '',\n                isValid: false\n            },\n            image: {\n                value: null,\n                isValid: false\n            },\n            description: {\n                value: '',\n                isValid: false\n            },\n            address: {\n                value: '',\n                isValid: false\n            }\n        },\n        false\n    );\n\n    const history = useHistory();\n\n    const placeSubmitHandler = async event => {\n        event.preventDefault();\n        const formData = new FormData();\n        formData.append('title', formState.inputs.title.value);\n        formData.append('image', formState.inputs.image.value);\n        formData.append('description', formState.inputs.description.value);\n        formData.append('address', formState.inputs.address.value);\n        try {\n            await sendRequest(\n                process.env.REACT_APP_BACKEND_URL + '/places',\n                'POST',\n                formData,\n                {\n                    Authorization: `Bearer ${auth.token}`\n                }\n            );\n            history.push('/');\n        } catch (err) {\n            console.log(err);\n        }\n\n    };\n\n    return (\n        <React.Fragment>\n            <ErrorModal error={error} onClear={clearError} />\n            <form className=\"place-form\" onSubmit={placeSubmitHandler}>\n                {isLoading && <LoadingSpinner asOverlay />}\n                <Input\n                    id=\"title\"\n                    element=\"input\"\n                    type=\"text\"\n                    label=\"Title\"\n                    validators={[VALIDATOR_REQUIRE()]}\n                    errorText=\"Please enter a valid title.\"\n                    onInput={inputHandler}\n                />\n                <ImageUpload center id=\"image\" onInput={inputHandler} errorText=\"Please provide an image.\" />\n                <Input\n                    id=\"description\"\n                    element=\"textarea\"\n                    label=\"Description\"\n                    validators={[VALIDATOR_MINLENGTH(5)]}\n                    errorText=\"Please enter a valid description (at least 5 characters).\"\n                    onInput={inputHandler}\n                />\n                <Input\n                    id=\"address\"\n                    element=\"input\"\n                    label=\"Address\"\n                    validators={[VALIDATOR_REQUIRE()]}\n                    errorText=\"Please enter a valid address.\"\n                    onInput={inputHandler}\n                />\n                <Button type=\"submit\" disabled={!formState.isValid} >ADD PLACE</Button>\n            </form>\n        </React.Fragment>\n    );\n};\n\nexport default NewPlace;"],"sourceRoot":""}