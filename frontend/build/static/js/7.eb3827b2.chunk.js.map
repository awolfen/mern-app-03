{"version":3,"sources":["shared/components/UIElements/Card.js","shared/components/UIElements/Map.js","places/components/PlaceItem.js","places/components/PlaceList.js","places/pages/UserPlaces.js"],"names":["Card","props","className","style","children","Map","mapRef","useRef","center","zoom","useEffect","map","window","google","maps","current","Marker","position","ref","PlaceItem","auth","useContext","AuthContext","useHttpClient","isLoading","error","clearError","sendRequest","useState","showMap","setShowMap","showDeleteWarning","setShowDeleteWarning","closeMapHandler","closeDeleteWarningHandler","confirmDeleteHandler","a","process","id","Authorization","token","onDelete","Fragment","ErrorModal","onClear","Modal","show","onCancel","header","address","contentClass","footerClass","footer","Button","onClick","coordinates","LoadingSpinner","asOverlay","inverse","danger","src","image","alt","title","description","userId","creatorId","to","PlaceList","items","length","place","creator","location","onDeletePlace","UserPlaces","userPlaces","setUserPlaces","useParams","responseData","places","console","log","fetchUserPlaces","filter"],"mappings":"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","file":"static/js/7.eb3827b2.chunk.js","sourcesContent":["import React from 'react';\n\nimport './Card.css';\n\nconst Card = props => {\n  return (\n    <div className={`card ${props.className}`} style={props.style}>\n      {props.children}\n    </div>\n  );\n};\n\nexport default Card;\n","import React, { useEffect, useRef } from 'react';\n\nimport './Map.css';\n\nconst Map = props => {\n    const mapRef = useRef();\n\n    const { center, zoom } = props;\n\n    useEffect(() => {\n        const map = new window.google.maps.Map(mapRef.current, {\n            center: center,\n            zoom: zoom\n        });\n\n        new window.google.maps.Marker({ position: center, map: map });\n    }, [center, zoom]);\n\n\n    return (\n        <div\n            ref={mapRef}\n            className={`map ${props.className}`}\n            style={props.style}\n        ></div >\n    );\n};\n\nexport default Map;","import React, { useContext, useState } from 'react';\nimport Button from '../../shared/components/FormElements/Button';\nimport Card from '../../shared/components/UIElements/Card';\nimport Map from '../../shared/components/UIElements/Map';\nimport Modal from '../../shared/components/UIElements/Modal';\nimport ErrorModal from '../../shared/components/UIElements/ErrorModal';\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner';\nimport { AuthContext } from '../../shared/context/auth-context';\nimport { useHttpClient } from '../../shared/hooks/http-hook';\n\nimport './PlaceItem.css';\n\nconst PlaceItem = props => {\n    const auth = useContext(AuthContext);\n    const { isLoading, error, clearError, sendRequest } = useHttpClient();\n    const [showMap, setShowMap] = useState(false);\n    const [showDeleteWarning, setShowDeleteWarning] = useState(false);\n\n    const openMapHandler = () => setShowMap(true);\n    const closeMapHandler = () => setShowMap(false);\n\n    const openDeleteWarningHandler = () => setShowDeleteWarning(true);\n    const closeDeleteWarningHandler = () => setShowDeleteWarning(false);\n\n    const confirmDeleteHandler = async () => {\n        try {\n            await sendRequest(\n                `${process.env.REACT_APP_BACKEND_URL}/places/${props.id}`,\n                'DELETE',\n                null,\n                {\n                    Authorization: 'Bearer ' + auth.token\n                }\n            );\n            props.onDelete(props.id);\n        } catch (err) {\n\n        }\n        setShowDeleteWarning(false);\n    };\n\n    return (\n        <React.Fragment>\n            <ErrorModal error={error} onClear={clearError} />\n            <Modal\n                show={showMap}\n                onCancel={closeMapHandler}\n                header={props.address}\n                contentClass=\"place-item__modal-content\"\n                footerClass=\"place-item__modal-actions\"\n                footer={<Button onClick={closeMapHandler}>CLOSE</Button>}\n            >\n                <div className=\"map-container\">\n                    <Map center={props.coordinates} zoom={16} />\n                </div>\n            </Modal>\n            <Modal\n                show={showDeleteWarning}\n                onCancel={closeDeleteWarningHandler}\n                header=\"Are you sure?\"\n                contentClass=\"place-item__modal-content\"\n                footerClass=\"place-item__modal-actions\"\n                footer=\n                {\n                    <React.Fragment>\n                        {isLoading && <LoadingSpinner asOverlay />}\n                        <Button inverse onClick={closeDeleteWarningHandler}>CANCEL</Button>\n                        <Button danger onClick={confirmDeleteHandler}>DELETE</Button>\n                    </React.Fragment>\n                }\n            >\n                <p>Are you sure you would like to delete this place? This action cannot be undone.</p>\n            </Modal>\n            <li className=\"place-item\">\n                <Card className=\"place-item__content\">\n                    <div className=\"place-item__image\">\n                        <img src={`${process.env.REACT_APP_ASSET_URL}${props.image}`} alt={props.title} />\n                    </div>\n                    <div className=\"place-item__info\">\n                        <h2>{props.title}</h2>\n                        <h3>{props.address}</h3>\n                        <p>{props.description}</p>\n                    </div>\n                    <div className=\"place-item__actions\">\n                        <Button inverse onClick={openMapHandler}>VIEW ON MAP</Button>\n                        {(auth.userId === props.creatorId) && (<Button to={`/places/${props.id}`}>EDIT</Button>)}\n                        {(auth.userId === props.creatorId) && (<Button danger onClick={openDeleteWarningHandler}>DELETE</Button>)}\n                    </div>\n                </Card>\n            </li>\n        </React.Fragment>\n    );\n};\n\nexport default PlaceItem;","import React from 'react';\nimport Button from '../../shared/components/FormElements/Button';\nimport Card from '../../shared/components/UIElements/Card';\nimport PlaceItem from './PlaceItem';\n\nimport './PlaceList.css';\n\nconst PlaceList = props => {\n    if (props.items.length === 0) {\n        return (\n            <div className=\"place-list center\">\n                <Card>\n                    <h2>No Places Found</h2>\n                    <Button to=\"/places/new\">Share Place</Button>\n                </Card>\n            </div>\n        );\n    }\n\n    return (\n        <ul className=\"place-list\">\n            {props.items.map(place => (\n                <PlaceItem\n                    key={place.id}\n                    id={place.id}\n                    image={place.image}\n                    title={place.title}\n                    description={place.description}\n                    address={place.address}\n                    creatorId={place.creator}\n                    coordinates={place.location}\n                    onDelete={props.onDeletePlace}\n                />\n            ))}\n        </ul>\n    );\n};\n\nexport default PlaceList;","import React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport PlaceList from '../components/PlaceList';\nimport Card from '../../shared/components/UIElements/Card';\nimport ErrorModal from '../../shared/components/UIElements/ErrorModal';\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner';\nimport { useHttpClient } from '../../shared/hooks/http-hook';\nimport Button from '../../shared/components/FormElements/Button';\n\nconst UserPlaces = () => {\n    const { isLoading, error, clearError, sendRequest } = useHttpClient();\n    const [userPlaces, setUserPlaces] = useState();\n    const userId = useParams().userId;\n\n    useEffect(() => {\n        const fetchUserPlaces = async () => {\n            try {\n                const responseData = await sendRequest(`${process.env.REACT_APP_BACKEND_URL}/places/users/${userId}`);\n                setUserPlaces(responseData.places);\n            } catch (err) {\n                console.log(err);\n            }\n        };\n        fetchUserPlaces();\n    }, [sendRequest, userId]);\n\n    const deletePlaceHandler = (id) => {\n        setUserPlaces(userPlaces.filter(place => place.id !== id));\n    };\n\n    if (!userPlaces) {\n        return (\n            <div className=\"center\">\n                <Card>\n                    <h2>No places found.</h2>\n                    <Button to='/places/new'>Add Place</Button>\n                </Card>\n            </div>\n        )\n    }\n\n    return (\n        <React.Fragment>\n            <ErrorModal error={error} onClear={clearError} />\n            {isLoading && (\n                <div className=\"center\">\n                    <LoadingSpinner asOverlay />\n                </div>\n            )}\n            {!isLoading && userPlaces && <PlaceList items={userPlaces} onDeletePlace={deletePlaceHandler} />}\n        </React.Fragment>\n    )\n};\n\nexport default UserPlaces;"],"sourceRoot":""}